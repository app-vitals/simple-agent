[project]
name = "simple-agent"
version = "0.1.0"
description = "A CLI AI agent built on Unix philosophies"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "litellm>=1.66.3",
    "pydantic>=2.11.3",
    "prompt_toolkit>=3.0.50",
    "python-dotenv>=1.1.0",
    "rich>=14.0.0",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.0",
    "ruff>=0.11.6",
]

[project.scripts]
simple-agent = "simple_agent.__main__:main"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true

[[tool.mypy.overrides]]
module = "litellm.*"
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
  "E",    # pycodestyle errors
  "F",    # pyflakes
  "I",    # isort
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "N",    # pep8-naming
  "SIM",  # flake8-simplify
  "TCH",  # flake8-type-checking
  "TID",  # flake8-tidy-imports
  "UP",   # pyupgrade
]
ignore = [
  "E501",  # line too long, handled by black
]

[tool.ruff.lint.isort]
known-first-party = ["simple_agent"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
pythonpath = ["."]
addopts = "--cov=simple_agent --cov-report=term-missing --cov-fail-under=90"

[tool.lint-all]
commands = [
    "black .",
    "ruff check --fix .",
    "mypy simple_agent/ tests/"
]
